---
source: src/test.rs
expression: evaluate_example(path)
input_file: tests/table2.nu
---
==== COMPILER ====
0: Expr(String) (7 to 8) "a"
1: Expr(String) (10 to 11) "b"
2: Expr(List([NodeId(0), NodeId(1)])) (6 to 11)
3: Expr(Int) (20 to 21) "1"
4: Expr(Int) (23 to 24) "2"
5: Expr(List([NodeId(3), NodeId(4)])) (19 to 24)
6: Expr(Int) (31 to 32) "3"
7: Expr(Int) (34 to 35) "4"
8: Expr(List([NodeId(6), NodeId(7)])) (30 to 35)
9: Expr(Table { header: NodeId(2), rows: [NodeId(5), NodeId(8)] }) (0 to 37)
10: Expr(Block(BlockId(0))) (0 to 38)
==== SCOPE ====
0: Frame Scope, node_id: NodeId(10) (empty)
==== TYPES ====
0: unknown
1: unknown
2: unknown
3: unknown
4: unknown
5: unknown
6: unknown
7: unknown
8: unknown
9: unknown
10: unknown
==== TYPE ERRORS ====
Error (NodeId 9): unsupported ast node 'Expr(Table { header: NodeId(2), rows: [NodeId(5), NodeId(8)] })' in typechecker
==== IR ====
register_count: 0
file_count: 0
==== IR ERRORS ====
Error (NodeId 9): node Expr(Table { header: NodeId(2), rows: [NodeId(5), NodeId(8)] }) not suported yet
