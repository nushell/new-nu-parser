---
source: src/test.rs
expression: evaluate_example(path)
input_file: tests/let_.nu
snapshot_kind: text
---
==== COMPILER ====
0: Variable (4 to 5) "x"
1: Int (8 to 11) "123"
2: Let { variable_name: NodeId(0), ty: None, initializer: NodeId(1), is_mutable: false } (0 to 11)
3: Variable (13 to 15) "$x"
4: Block(BlockId(0)) (0 to 15)
==== SCOPE ====
0: Frame Scope, node_id: NodeId(4)
  variables: [ x: NodeId(0) ]
==== TYPES ====
0: int
1: int
2: ()
3: int
4: int
==== IR ====
register_count: 1
file_count: 1
0: LoadLiteral { dst: RegId(0), lit: Int(123) }
1: Return { src: RegId(0) }
==== IR ERRORS ====
Error (NodeId 0): node Variable not suported yet
Error (NodeId 2): node Let { variable_name: NodeId(0), ty: None, initializer: NodeId(1), is_mutable: false } not suported yet
Error (NodeId 3): node Variable not suported yet
Error (NodeId 4): node Block(BlockId(0)) not suported yet
