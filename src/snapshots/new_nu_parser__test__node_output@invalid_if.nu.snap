---
source: src/test.rs
expression: evaluate_example(path)
input_file: tests/invalid_if.nu
---
==== COMPILER ====
0: Expr(Int) (3 to 4) "1"
1: Expr(Int) (9 to 10) "4"
2: Expr(Block(BlockId(0))) (5 to 13)
3: Expr(Int) (22 to 23) "3"
4: Expr(Block(BlockId(1))) (18 to 25)
5: Expr(If { condition: NodeId(0), then_block: NodeId(2), else_block: Some(NodeId(4)) }) (0 to 25)
6: Expr(Block(BlockId(2))) (0 to 26)
==== SCOPE ====
0: Frame Scope, node_id: NodeId(6) (empty)
1: Frame Scope, node_id: NodeId(2) (empty)
2: Frame Scope, node_id: NodeId(4) (empty)
==== TYPES ====
0: int
1: int
2: int
3: int
4: int
5: int
6: int
==== TYPE ERRORS ====
Error (NodeId 0): Expected bool, got int
==== IR ====
register_count: 0
file_count: 0
==== IR ERRORS ====
Error (NodeId 5): node Expr(If { condition: NodeId(0), then_block: NodeId(2), else_block: Some(NodeId(4)) }) not suported yet
