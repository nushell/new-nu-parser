---
source: src/test.rs
expression: evaluate_example(path)
input_file: tests/math.nu
snapshot_kind: text
---
==== COMPILER ====
0: Int (0 to 1) "3"
1: Plus (2 to 3)
2: Int (4 to 5) "4"
3: BinaryOp { lhs: NodeId(0), op: NodeId(1), rhs: NodeId(2) } (0 to 5)
4: Block(BlockId(0)) (0 to 5)
==== SCOPE ====
0: Frame Scope, node_id: NodeId(4) (empty)
==== TYPES ====
0: int
1: forbidden
2: int
3: int
4: int
==== IR ====
register_count: 2
file_count: 2
0: LoadLiteral { dst: RegId(0), lit: Int(3) }
1: LoadLiteral { dst: RegId(1), lit: Int(4) }
2: BinaryOp { lhs_dst: RegId(0), op: Math(Plus), rhs: RegId(1) }
3: Return { src: RegId(0) }
==== IR ERRORS ====
Error (NodeId 4): node Block(BlockId(0)) not suported yet
