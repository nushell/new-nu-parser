---
source: src/test.rs
expression: evaluate_example(path)
input_file: tests/table.nu
snapshot_kind: text
---
==== COMPILER ====
0: String (7 to 10) ""a""
1: String (12 to 15) ""b""
2: List([NodeId(0), NodeId(1)]) (6 to 15)
3: Int (24 to 25) "1"
4: Int (27 to 28) "2"
5: List([NodeId(3), NodeId(4)]) (23 to 28)
6: Int (35 to 36) "3"
7: Int (38 to 39) "4"
8: List([NodeId(6), NodeId(7)]) (34 to 39)
9: Table { header: NodeId(2), rows: [NodeId(5), NodeId(8)] } (0 to 41)
10: Block(BlockId(0)) (0 to 42)
==== SCOPE ====
0: Frame Scope, node_id: NodeId(10) (empty)
==== TYPES ====
0: unknown
1: unknown
2: unknown
3: unknown
4: unknown
5: unknown
6: unknown
7: unknown
8: unknown
9: unknown
10: unknown
==== TYPE ERRORS ====
Error (NodeId 9): unsupported ast node 'Table { header: NodeId(2), rows: [NodeId(5), NodeId(8)] }' in typechecker
