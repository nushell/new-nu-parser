---
source: src/test.rs
expression: evaluate_example(path)
input_file: tests/closure.nu
---
==== COMPILER ====
0: Name (3 to 4) "a"
1: Param { name: NodeId(0), ty: None } (3 to 4)
2: Name (6 to 7) "b"
3: Param { name: NodeId(2), ty: None } (6 to 7)
4: Params([NodeId(1), NodeId(3)]) (2 to 8)
5: Expr(VarRef) (9 to 11) "$a"
6: Plus (12 to 13)
7: Expr(VarRef) (14 to 16) "$b"
8: Expr(BinaryOp { lhs: NodeId(5), op: NodeId(6), rhs: NodeId(7) }) (9 to 16)
9: Expr(Block(BlockId(0))) (9 to 16)
10: Expr(Closure { params: Some(NodeId(4)), block: NodeId(9) }) (0 to 17)
11: Expr(VarRef) (18 to 20) "$a"
12: Expr(Block(BlockId(1))) (0 to 42)
==== SCOPE ====
0: Frame Scope, node_id: NodeId(12) (empty)
1: Frame Scope, node_id: NodeId(9)
  variables: [ a: NodeId(0), b: NodeId(2) ]
==== SCOPE ERRORS ====
Error (NodeId 11): variable `a` not found
